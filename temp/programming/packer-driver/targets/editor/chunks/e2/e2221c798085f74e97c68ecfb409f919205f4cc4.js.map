{"version":3,"sources":["file:///Users/fe-tu/Desktop/Personal/2048-kakalak/assets/scripts/GameManager.ts"],"names":["getPosition","col","row","startX","TABLE_FORMAT","length","COL_SIZE","startY","ROW_SIZE","Vec3","_decorator","Component","Input","input","instantiate","KeyCode","Node","Prefab","tween","NumberTileManager","ccclass","property","TABLE_WIDTH","TABLE_HEIGHT","MOVE_SPEED","GameManager","tableData","start","on","EventType","KEY_DOWN","onKeyDown","Array","fill","map","_","index","spawnRandomTile","randomCol","randomRow","console","table","event","keyCode","SPACE","moveDown","KEY_A","ARROW_LEFT","moveLeft","KEY_D","ARROW_RIGHT","moveRight","KEY_S","ARROW_DOWN","KEY_W","ARROW_UP","moveUp","data","numberTile","numberTilePrefab","getRandomColRow","randomPos","randomValue","Math","random","setParent","setPosition","getComponent","updateValue","floor","promises","nextRow","newPos","push","moveNumberToPos","Promise","all","then","nextCol","resolve","to","position","call"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventKeyboard, Input, input, instantiate, KeyCode, Node, Prefab, tween, Vec2, Vec3 } from 'cc';\nimport { NumberTileManager } from './NumberTileManager';\nconst { ccclass, property } = _decorator;\n\nconst TABLE_WIDTH = 512, TABLE_HEIGHT = 512;\nconst TABLE_FORMAT = [4, 4, 4, 4];\nconst ROW_SIZE = TABLE_HEIGHT / TABLE_FORMAT.length;\nconst COL_SIZE = TABLE_WIDTH / TABLE_FORMAT[0];\nconst MOVE_SPEED = 0.1;\n\nfunction getPosition(col, row) {\n    const startX = (-TABLE_FORMAT.length / 2 + 0.5) * COL_SIZE;\n    const startY = (TABLE_FORMAT[0] / 2 - 0.5) * ROW_SIZE;\n\n    return new Vec3(startX + COL_SIZE * col, startY - ROW_SIZE * row, 0);\n}\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n\n    @property(Node) table: Node;\n    @property(Prefab) numberTilePrefab: Prefab;\n\n    tableData: any[][];\n\n    start() {\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n\n        this.tableData = new Array(TABLE_FORMAT.length).fill([]).map((_, index) => new Array(TABLE_FORMAT[index]).fill(null));\n        this.spawnRandomTile({ randomCol: 2, randomRow: 2 });\n        this.spawnRandomTile({ randomCol: 1, randomRow: 1 });\n        console.table(this.tableData)\n    }\n\n    onKeyDown(event: EventKeyboard) {\n        switch (event.keyCode) {\n            case KeyCode.SPACE:\n                this.moveDown();\n                break;\n            case KeyCode.KEY_A:\n            case KeyCode.ARROW_LEFT:\n                this.moveLeft();\n                break;\n            case KeyCode.KEY_D:\n            case KeyCode.ARROW_RIGHT:\n                this.moveRight();\n                break;\n            case KeyCode.KEY_S:\n            case KeyCode.ARROW_DOWN:\n                this.moveDown();\n                break;\n            case KeyCode.KEY_W:\n            case KeyCode.ARROW_UP:\n                this.moveUp();\n                break;\n        }\n    }\n\n    spawnRandomTile(data) {\n        const numberTile = instantiate(this.numberTilePrefab);\n        const { randomCol, randomRow } = data || this.getRandomColRow();\n        const randomPos = getPosition(randomCol, randomRow);\n        const randomValue = Math.random() > 0.5 ? 2 : 4;\n\n        numberTile.setParent(this.table);\n        numberTile.setPosition(randomPos);\n        numberTile.getComponent(NumberTileManager).updateValue(randomValue);\n        numberTile['value'] = randomValue;\n        numberTile['col'] = randomCol;\n        numberTile['row'] = randomRow;\n\n        this.tableData[randomCol][randomRow] = numberTile;\n    }\n\n    getRandomColRow() {\n        let randomCol = Math.floor(TABLE_FORMAT.length * Math.random());\n        let randomRow = Math.floor(TABLE_FORMAT[0] * Math.random());\n\n        while (this.tableData[randomCol][randomRow] !== null) {\n            randomCol = Math.floor(TABLE_FORMAT.length * Math.random());\n            randomRow = Math.floor(TABLE_FORMAT[0] * Math.random());\n        }\n\n        return { randomCol, randomRow };\n    }\n\n    moveDown() {\n        let promises = [];\n        for (let col = 0; col < TABLE_FORMAT.length; col++) {\n\n            for (let row = 0; row < TABLE_FORMAT[col]; row++) {\n                if (!this.tableData[col][row]) continue;\n                const numberTile = this.tableData[col][row];\n\n                let nextRow = row;\n                while (this.tableData[col][nextRow + 1] === null) {\n                    nextRow++;\n                }\n\n                this.tableData[col][row] = null;\n                this.tableData[col][nextRow] = numberTile;\n\n                const newPos = getPosition(col, nextRow);\n                promises.push(this.moveNumberToPos(numberTile, newPos));\n            }\n\n        }\n\n        return Promise.all(promises)\n            .then(() => {\n                console.table(this.tableData);\n            });\n    }\n\n    moveUp() {\n        let promises = [];\n        for (let col = 0; col < TABLE_FORMAT.length; col++) {\n\n            for (let row = TABLE_FORMAT[col] - 1; row >= 0; row--) {\n                if (!this.tableData[col][row]) continue;\n                const numberTile = this.tableData[col][row];\n\n                let nextRow = row;\n                while (this.tableData[col][nextRow - 1] === null) {\n                    nextRow--;\n                }\n\n                this.tableData[col][row] = null;\n                this.tableData[col][nextRow] = numberTile;\n\n                const newPos = getPosition(col, nextRow);\n                promises.push(this.moveNumberToPos(numberTile, newPos));\n            }\n\n        }\n\n        return Promise.all(promises)\n            .then(() => {\n                console.table(this.tableData);\n            });\n    }\n\n    moveRight() {\n        let promises = [];\n        for (let row = 0; row < TABLE_FORMAT[0]; row++) {\n\n            for (let col = 0; col < TABLE_FORMAT.length; col++) {\n                if (!this.tableData[col] || !this.tableData[col][row]) continue;\n                const numberTile = this.tableData[col][row];\n\n                let nextCol = col;\n                while (this.tableData[nextCol + 1] && this.tableData[nextCol + 1][row] === null) {\n                    nextCol++;\n                }\n\n                this.tableData[col][row] = null;\n                this.tableData[nextCol][row] = numberTile;\n\n                const newPos = getPosition(nextCol, row);\n                promises.push(this.moveNumberToPos(numberTile, newPos));\n            }\n\n        }\n\n        return Promise.all(promises)\n            .then(() => {\n                console.table(this.tableData);\n            });\n    }\n\n    moveLeft() {\n        let promises = [];\n        for (let row = 0; row < TABLE_FORMAT[0]; row++) {\n\n            for (let col = TABLE_FORMAT.length; col >= 0; col--) {\n                if (!this.tableData[col] || !this.tableData[col][row]) continue;\n                const numberTile = this.tableData[col][row];\n\n                let nextCol = col;\n                while (this.tableData[nextCol - 1] && this.tableData[nextCol - 1][row] === null) {\n                    nextCol--;\n                }\n\n                this.tableData[col][row] = null;\n                this.tableData[nextCol][row] = numberTile;\n\n                const newPos = getPosition(nextCol, row);\n                promises.push(this.moveNumberToPos(numberTile, newPos));\n            }\n\n        }\n\n        return Promise.all(promises)\n            .then(() => {\n                console.table(this.tableData);\n            });\n    }\n\n    moveNumberToPos(numberTile, newPos) {\n        return new Promise((resolve, _) => {\n            numberTile['moveTween'] = tween(numberTile)\n                .to(MOVE_SPEED * 2, { position: newPos })\n                .call(() => {\n                    numberTile['moveTween'] = null;\n                    resolve(numberTile);\n                })\n                .start();\n        });\n    }\n\n}\n\n"]}