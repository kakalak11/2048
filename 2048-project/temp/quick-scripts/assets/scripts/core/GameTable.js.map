{"version":3,"sources":["GameTable.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAuC,6BAAY;IADnD;QAAA,qEAuCC;QApCG,iBAAW,GAAY,IAAI,CAAC;QAG5B,gBAAU,GAAW,aAAa,CAAC;;IAiCvC,CAAC;IA5Ba,0BAAM,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAAA,CAAC;IAEF,wBAAI,GAAJ,UAAK,WAAW,EAAE,MAAM;QACpB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAAA,CAAC;IAEF,8BAAU,GAAV;QACI,wCAAwC;QAExC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAAA,CAAC;IAEF,sCAAkB,GAAlB;QACY,IAAA,uCAAY,CAAiB;QAC7B,IAAA,wBAAI,EAAE,4BAAM,CAAkB;QACtC,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACjE,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QAE7D,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3D,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;QACjC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAAA,CAAC;IAnCF;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACU;IAG5B;QADC,QAAQ,CAAC,MAAM,CAAC;iDACkB;IALlB,SAAS;QAD7B,OAAO,CAAC,WAAW,CAAC;OACA,SAAS,CAsC7B;IAAD,gBAAC;CAtCD,AAsCC,CAtCsC,EAAE,CAAC,SAAS,GAsClD;kBAtCoB,SAAS","file":"","sourceRoot":"../../../../../assets/scripts/core","sourcesContent":["import PoolFactory from \"../common/PoolFactory\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass('GameTable')\nexport default class GameTable extends cc.Component {\n    @property(cc.Node)\n    tilesHolder: cc.Node = null;\n\n    @property(String)\n    prefabName: string = 'TILE_PREFAB';\n\n    poolFactory: PoolFactory;\n    config: any;\n\n    protected onLoad(): void {\n        this.node.on('INIT', this.init, this);\n        this.node.on('TABLE_SETUP', this.tableSetup, this);\n    };\n\n    init(poolFactory, config) {\n        this.poolFactory = poolFactory;\n        this.config = config;\n    };\n\n    tableSetup() {\n        // const { TABLE_FORMAT } = this.config;\n\n        this.randomGenerateTile();\n        this.randomGenerateTile();\n    };\n\n    randomGenerateTile() {\n        const { TABLE_CONFIG } = this.config;\n        const { STEP, FORMAT } = TABLE_CONFIG;\n        const randomX = Math.floor(Math.random() * FORMAT.length) * STEP;\n        const randomY = Math.floor(Math.random() * FORMAT[0]) * STEP;\n\n        const object = this.poolFactory.getObject(this.prefabName);\n        object.parent = this.tilesHolder;\n        object.active = true;\n        object.setPosition(randomX, randomY);\n    };\n}\n"]}