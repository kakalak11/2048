{"version":3,"sources":["PoolFactory.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/scripts/common","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass('PoolFactoryComponent')\nclass PoolFactoryComponent {\n    @property({ displayName: 'Prefab Name', visible: true })\n    prefabName: string = '';\n\n    @property({ type: cc.Prefab, displayName: 'Prefab', visible: true })\n    prefab: cc.Prefab = null;\n\n    @property({ displayName: 'Initial Count', visible: true })\n    initialCount: number = 5;\n    objectPrefab: any = null;\n}\n\ninterface PoolObject {\n    prefabName: string,\n    objectPrefab: cc.Prefab,\n    pool: cc.NodePool,\n};\n\n@ccclass\nexport default class PoolFactory extends cc.Component {\n\n    @property({ type: PoolFactoryComponent })\n    poolPrefabList: PoolFactoryComponent[] = [];\n\n    pools: PoolObject[] = null;\n    \n    onLoad() {\n        this.pools = [];\n        for (let i = 0; i < this.poolPrefabList.length; i++) {\n            let compName = this.poolPrefabList[i].prefabName;\n            const aPool = new cc.NodePool(compName);\n\n            for (let j = 0; j < this.poolPrefabList[i].initialCount; j++) {\n                let obj = cc.instantiate(this.poolPrefabList[i].objectPrefab);\n                obj.name = compName;\n                obj.active = false;\n                aPool.put(obj);\n            }\n            const poolObject: PoolObject = {\n                prefabName: this.poolPrefabList[i].prefabName,\n                objectPrefab: this.poolPrefabList[i].objectPrefab,\n                pool: aPool,\n            };\n            this.pools[i] = poolObject;\n        }\n        this.node.poolFactory = this;\n    };\n\n    getObject(_prefabName): cc.Node {\n        let obj: cc.Node = null;\n        for (let i = 0; i < this.pools.length; i++) {\n            const { prefabName, objectPrefab, pool } = this.pools[i];\n            if (prefabName == _prefabName) {\n                if (pool.size() > 0) {\n                    obj = pool.get();\n                } else {\n                    obj = cc.instantiate(objectPrefab);\n                    obj.name = prefabName;\n                    obj.active = false;\n                }\n                break;\n            }\n        }\n        return obj;\n    };\n\n    removeObject(node): void {\n        let name = node.name;\n        for (let i = 0; i < this.pools.length; i++) {\n            const { prefabName, pool } = this.pools[i];\n            if (name == prefabName) {\n                node.active = false;\n                pool.put(node);\n                break;\n            }\n        }\n    };\n\n    onDestroy() {\n        for (let i = 0; i < this.pools.length; i++) {\n            const { pool } = this.pools[i];\n            if (pool) {\n                pool.clear();\n            }\n            this.poolPrefabList[i].objectPrefab = null;\n        }\n        this.pools = [];\n        this.pools = null;\n        this.poolPrefabList = [];\n        this.poolPrefabList = null;\n        this.node.poolFactory = null;\n    };\n}\n"]}