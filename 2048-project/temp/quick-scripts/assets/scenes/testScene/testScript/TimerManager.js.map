{"version":3,"sources":["TimerManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/scenes/testScene/testScript","sourcesContent":["const { ccclass, property } = cc._decorator;\n\nconst MAX_FPS = 60;\nconst FRAME_TIME = 0.0167;\n\ninterface Time {\n    timeString: string,\n    minute: number,\n    second: number,\n    milisecond: number,\n};\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Label)\n    minuteLabel: cc.Label = null;\n\n    @property(cc.Label)\n    secondLabel: cc.Label = null;\n\n    @property(cc.Label)\n    milisecondLabel: cc.Label = null;\n\n    @property(cc.Button)\n    startButton: cc.Button = null;\n\n    @property(cc.Button)\n    resetButton: cc.Button = null;\n\n    minute: number = 0;\n    second: number = 0;\n    miliSecond: number = 0;\n    private _temp: number = 0;\n    isStart: boolean = null;\n    isPause: boolean = null;\n    timeList: Time[] = [];\n\n    onLoad() {\n        this.minute = 0;\n        this.second = 0;\n        this.miliSecond = 0;\n        this._temp = 0;\n    };\n\n    onClickStart() {\n        if (!this.isStart || this.isPause) {\n            this.isStart = true;\n            this.isPause = false;\n        }\n    };\n\n    onClickPause() {\n        if (this.isStart && !this.isPause) {\n            this.isPause = true;\n        } else {\n            this.onClickStart();\n        }\n    };\n\n    onClickSave() {\n        const timeObject: Time = {\n            timeString: `${this.minuteLabel.string}:${this.secondLabel.string}:${this.milisecondLabel.string}`,\n            minute: this.minute,\n            second: this.second,\n            milisecond: this.miliSecond,\n        };\n        this.timeList.push(timeObject);\n    };\n\n    onClickReset() {\n        this.minute = 0;\n        this.second = 0;\n        this.miliSecond = 0;\n        this._temp = 0;\n        this.isStart = null;\n\n        this.minuteLabel.string = '00';\n        this.secondLabel.string = '00';\n        this.milisecondLabel.string = '00';\n    };\n\n    protected update(dt: number): void {\n        if (!this.isStart || this.isPause) return;\n        this.calculateTime(dt);\n        this.minuteLabel.string = this.minute.toString().length > 1 ? this.minute.toString() : '0' + this.minute.toString();\n        this.secondLabel.string = this.second.toString().length > 1 ? this.second.toString() : '0' + this.second.toString();\n        this.milisecondLabel.string = this.formatTime(this.miliSecond).length > 1 ? this.formatTime(this.miliSecond) : '0' + this.formatTime(this.miliSecond);\n    };\n\n    calculateTime(deltaTime) {\n        this._temp += FRAME_TIME;\n        this.miliSecond += FRAME_TIME;\n\n        // reset the temp value to 0 and increment second by 1\n        if (this._temp >= 1) {\n            this._temp = 0;\n            this.miliSecond = 0;\n            this.second++;\n        }\n\n        if (this.second >= 60) {\n            this.second = 0;\n            this.minute++;\n        }\n    };\n\n    formatTime(value) {\n        let _value = value;\n        const valueString = value.toString();\n        if (valueString.length > 2) {\n            const dotIndex = valueString.indexOf('.') + 1;\n            _value = valueString.substring(dotIndex, dotIndex + 2);\n        }\n        return _value;\n    };\n}\n"]}