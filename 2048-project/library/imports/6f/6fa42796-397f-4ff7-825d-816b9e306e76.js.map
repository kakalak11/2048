{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\gameBoard.js"],"names":["cc","Class","extends","Component","properties","tilesPrefab","Prefab","_moveRight","_randomTilesGenerate","tile","node","children","Math","floor","random","tileLabel","getComponent","string","_tilesInit","i","Collum","collum","Node","width","height","x","addComponent","Layout","layoutCollum","type","spacingX","j","instantiate","addChild","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","emit","log","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,qBAAaL,GAAGM;AADR,KAHP;;AAOL;;AAEAC,cATK,wBASQ,CACZ,CAVI;AAYLC,wBAZK,kCAYkB;AACnB,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAnB,EAAkDH,QAAlD,CAA2DC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAA3D,CAAX;AACA,YAAIC,YAAYN,KAAKE,QAAL,CAAc,CAAd,EAAiBK,YAAjB,CAA8B,UAA9B,CAAhB;AACAD,kBAAUE,MAAV,GAAmBL,KAAKE,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAA7C;AACH,KAhBI;;;AAkBLI,gBAAY,sBAAY;;AAEpB,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAAA,gBAGfC,MAHe,GAGxB,SAASA,MAAT,GAAkB;AACd,oBAAIC,SAAS,IAAIrB,GAAGsB,IAAP,EAAb;AACAD,uBAAOE,KAAP,GAAe,GAAf;AACAF,uBAAOG,MAAP,GAAgB,GAAhB;AACAH,uBAAOI,CAAP,IAAY,CAAZ;AACAJ,uBAAOK,YAAP,CAAoB1B,GAAG2B,MAAvB;AACA,oBAAIC,eAAeP,OAAOL,YAAP,CAAoBhB,GAAG2B,MAAvB,CAAnB;AACAC,6BAAaC,IAAb,GAAoB,CAApB;AACAD,6BAAaE,QAAb,GAAwB,CAAxB;;AAGA,uBAAOT,MAAP;AACH,aAfuB;;AACxB,gBAAIA,SAAS,IAAID,MAAJ,EAAb;;AAgBA,iBAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,oBAAItB,OAAOT,GAAGgC,WAAH,CAAe,KAAK3B,WAApB,CAAX;AACAgB,uBAAOY,QAAP,CAAgBxB,IAAhB;AACH;AACD,iBAAKC,IAAL,CAAUuB,QAAV,CAAmBZ,MAAnB;AACH;AACJ,KA3CI;;AA6CLa,UA7CK,oBA6CI;AACLlC,WAAGmC,WAAH,CAAeC,EAAf,CAAkBpC,GAAGqC,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,YAAW;AAC5D,iBAAK7B,IAAL,CAAU8B,IAAV,CAAe,OAAf;AACAxC,eAAGyC,GAAH,CAAO,SAAP;AACH,SAHD,EAGG,IAHH;AAIA,aAAKvB,UAAL;AACA,aAAKV,oBAAL;AACA,aAAKA,oBAAL;AACH,KArDI;AAuDLkC,SAvDK,mBAuDG,CAEP;AAzDI;;AA2DL;AA3DJ","file":"gameBoard.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        tilesPrefab: cc.Prefab,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    _moveRight() {\r\n    },\r\n\r\n    _randomTilesGenerate() {\r\n        let tile = this.node.children[Math.floor(Math.random() * 4)].children[Math.floor(Math.random() * 4)];\r\n        let tileLabel = tile.children[0].getComponent('cc.Label');\r\n        tileLabel.string = Math.random() > 0.5 ? 2 : 4;\r\n    },\r\n\r\n    _tilesInit: function () {\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            let collum = new Collum();\r\n\r\n            function Collum() {\r\n                let collum = new cc.Node;\r\n                collum.width = 425;\r\n                collum.height = 100;\r\n                collum.x += 5;\r\n                collum.addComponent(cc.Layout);\r\n                let layoutCollum = collum.getComponent(cc.Layout);\r\n                layoutCollum.type = 1;\r\n                layoutCollum.spacingX = 5;\r\n\r\n\r\n                return collum;\r\n            }\r\n\r\n            for (let j = 0; j < 4; j++) {\r\n                let tile = cc.instantiate(this.tilesPrefab);\r\n                collum.addChild(tile);\r\n            }\r\n            this.node.addChild(collum);\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function() {\r\n            this.node.emit('right');\r\n            cc.log('keydown');\r\n        }, this);\r\n        this._tilesInit();\r\n        this._randomTilesGenerate();\r\n        this._randomTilesGenerate();\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}