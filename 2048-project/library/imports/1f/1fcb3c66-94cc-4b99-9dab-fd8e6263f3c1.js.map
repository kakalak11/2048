{"version":3,"sources":["../../../../../assets/scripts/core/assets/scripts/core/GameTable.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAuC,6BAAY;IADnD;QAAA,qEAmCC;QAhCG,iBAAW,GAAY,IAAI,CAAC;QAG5B,gBAAU,GAAW,aAAa,CAAC;;IA6BvC,CAAC;IAxBa,0BAAM,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAAA,CAAC;IAEF,wBAAI,GAAJ,UAAK,WAAW,EAAE,MAAM;QACpB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAAA,CAAC;IAEF,8BAAU,GAAV;QACY,IAAA,uCAAY,CAAiB;QAErC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAAA,CAAC;IAEF,sCAAkB,GAAlB;QACU,IAAA,gBAAoC,EAAlC,cAAI,EAAE,8BAA4B,CAAC;QAC3C,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;QAChE,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5D,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAA;IAC/C,CAAC;IAAA,CAAC;IA/BF;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACU;IAG5B;QADC,QAAQ,CAAC,MAAM,CAAC;iDACkB;IALlB,SAAS;QAD7B,OAAO,CAAC,WAAW,CAAC;OACA,SAAS,CAkC7B;IAAD,gBAAC;CAlCD,AAkCC,CAlCsC,EAAE,CAAC,SAAS,GAkClD;kBAlCoB,SAAS","file":"","sourceRoot":"../../../../../assets/scripts/core","sourcesContent":["import PoolFactory from \"../common/PoolFactory\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass('GameTable')\nexport default class GameTable extends cc.Component {\n    @property(cc.Node)\n    tilesHolder: cc.Node = null;\n\n    @property(String)\n    prefabName: string = 'TILE_PREFAB';\n\n    poolFactory: PoolFactory;\n    config: any;\n\n    protected onLoad(): void {\n        this.node.on('INIT', this.init, this);\n        this.node.on('TABLE_SETUP', this.tableSetup, this);\n    };\n\n    init(poolFactory, config) {\n        this.poolFactory = poolFactory;\n        this.config = config;\n    };\n\n    tableSetup() {\n        const { TABLE_FORMAT } = this.config;\n\n        this.randomGenerateTile();\n        this.randomGenerateTile();\n    };\n\n    randomGenerateTile() {\n        const { STEP, TABLE_FORMAT } = this.config;\n        const randomX = Math.floor(Math.random() * TABLE_FORMAT.length);\n        const randomY = Math.floor(Math.random() * TABLE_FORMAT[0]);\n\n        const object = this.poolFactory.getObject()\n    };\n}\n"]}