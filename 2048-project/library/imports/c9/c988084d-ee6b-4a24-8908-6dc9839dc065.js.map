{"version":3,"sources":["../../../../assets/script/assets/script/gameBoard.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","tilePrefab","Prefab","_tilesMatrix","_moving","_onKeyDown","event","keyCode","macro","KEY","right","_moveRight","left","_moveLeft","down","_moveDown","up","_moveUp","space","_showPostion","forEach","element","rowIndex","numbers","filter","active","zeros","concat","collumnIndex","runAction","sequence","moveTo","callFunc","i","shift","log","collumn","j","push","index","_tilesRows","_tilesCollumns","_setupGrid","numberIndex","row","tile","instantiate","Math","random","name","getComponent","setNumber","setPosition","v2","Number","String","getPosition","y","x","node","addChild","_generateRandomValue","randomTile","children","parseInt","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","start","update","dt"],"mappings":"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","file":"gameBoard.js","sourceRoot":"../../../../assets/script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst Emitter = require('event');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        tilePrefab: cc.Prefab,\n        _tilesMatrix: [],\n        _moving: null,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    _onKeyDown: function (event) {\n        if (this._moving) return;\n        switch (event.keyCode) {\n            case cc.macro.KEY.right:\n                this._moving = true;\n                this._moveRight();\n                break;\n            case cc.macro.KEY.left:\n                this._moving = true;\n                this._moveLeft();\n                break;\n            case cc.macro.KEY.down:\n                this._moving = true;\n                this._moveDown();\n                break;\n            case cc.macro.KEY.up:\n                this._moving = true;\n                this._moveUp();\n                break;\n            case cc.macro.KEY.space:\n                this._showPostion();\n                break;\n        }\n    },\n\n    _moveRight: function () {\n        this._tilesMatrix.forEach((element, rowIndex) => {\n            let numbers = element.filter(element => element.active);\n            let zeros = element.filter(element => !element.active);\n            element = zeros.concat(numbers);\n            element.forEach((element, collumnIndex) => element.runAction(cc.sequence(cc.moveTo(0.25, -157.5 + 105 * collumnIndex, 157.5 - 105 * rowIndex), cc.callFunc(() => this._moving = false))));\n            for (let i = 0; i < 4; i++) {\n                this._tilesMatrix[rowIndex][i] = element.shift();\n            }\n        });\n        cc.log(this._tilesMatrix);\n    },\n\n    _moveLeft: function () {\n        this._tilesMatrix.forEach((element, rowIndex) => {\n            let numbers = element.filter(element => element.active);\n            let zeros = element.filter(element => !element.active);\n            element = numbers.concat(zeros);\n            element.forEach((element, collumnIndex) => element.runAction(cc.sequence(cc.moveTo(0.25, -157.5 + 105 * collumnIndex, 157.5 - 105 * rowIndex), cc.callFunc(() => this._moving = false))));\n            for (let i = 0; i < 4; i++) {\n                this._tilesMatrix[rowIndex][i] = element.shift();\n            }\n        });\n        cc.log(this._tilesMatrix);\n    },\n\n    _moveDown: function () {\n        for (let i = 0; i < 4; i++) {\n            let collumn = [];\n            for (let j = 0; j < 4; j++) {\n                collumn.push(this._tilesMatrix[j][i]);\n            }\n            cc.log(collumn);\n            let numbers = collumn.filter(element => element.active);\n            let zeros = collumn.filter(element => !element.active);\n            collumn = zeros.concat(numbers);\n            cc.log(collumn);\n            collumn.forEach((element, index) => element.runAction(cc.sequence(cc.moveTo(0.25, -157.5 + 105 * i, 157.5 - 105 * index), cc.callFunc(() => this._moving = false))));\n            for (let j = 0; j < 4; j++) {\n                this._tilesMatrix[j][i] = collumn.shift();\n            }\n        }\n        cc.log(this._tilesMatrix);\n    },\n\n    _moveUp: function () {\n        for (let i = 0; i < 4; i++) {\n            let collumn = [];\n            for (let j = 0; j < 4; j++) {\n                collumn.push(this._tilesMatrix[j][i]);\n            }\n            cc.log(collumn);\n            let numbers = collumn.filter(element => element.active);\n            let zeros = collumn.filter(element => !element.active);\n            collumn = numbers.concat(zeros);\n            cc.log(collumn);\n            collumn.forEach((element, index) => element.runAction(cc.sequence(cc.moveTo(0.25, -157.5 + 105 * i, 157.5 - 105 * index), cc.callFunc(() => this._moving = false))));\n            for (let j = 0; j < 4; j++) {\n                this._tilesMatrix[j][i] = collumn.shift();\n            }\n        }\n        cc.log(this._tilesMatrix);\n    },\n\n    _showPostion: function () {\n        // this._tilesRows.forEach(element => element.forEach(element => cc.log(element.name, Math.floor((element.getPosition().x + 157.5) / 100), Math.floor((element.getPosition().y + 157.5) / 100))));\n        this._tilesRows.forEach(element => {\n            element.forEach(element => {\n                // this._tilesRows[Math.floor((element.getPosition().x + 157.5) / 100)][Math.floor((element.getPosition().y + 157.5) / 100)] = element;\n                // this._tilesCollumns[Math.floor((element.getPosition().y + 157.5) / 100)][Math.floor((element.getPosition().x + 157.5) / 100)] = element;\n                // cc.log(Math.floor((element.getPosition().x + 157.5) / 100), Math.floor((element.getPosition().y + 157.5) / 100))\n            })\n        });\n        cc.log(this._tilesCollumns, this._tilesRows);\n    },\n\n    _setupGrid() {\n        let numberIndex = 1;\n        this._tilesMatrix.push([], [], [], []);\n        for (let collumn = 0; collumn < 4; collumn++) {\n            for (let row = 0; row < 4; row++) {\n                let tile = cc.instantiate(this.tilePrefab);\n                tile.active = Math.random() > 0.7 ? true : false;\n                tile.name = `tile ${numberIndex}`;\n                tile.getComponent('tilesScript').setNumber(numberIndex++);\n                tile.setPosition(cc.v2(-157.5 + 105 * row, 157.5 - 105 * collumn));\n                // cc.log(Number(String(tile.getPosition().x + 157.5)[0]), Number(String((tile.getPosition().y - 157.5) * -1)[0]));\n                this._tilesMatrix[Number(String((tile.getPosition().y - 157.5) * -1)[0])][Number(String(tile.getPosition().x + 157.5)[0])] = tile;\n                this.node.addChild(tile);\n            }\n        }\n    },\n\n    _generateRandomValue() {\n        let randomTile = this.node.children[parseInt(Math.random() * 3)].children[parseInt(Math.random() * 3)];\n        cc.log(randomTile);\n    },\n\n    onLoad() {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this._onKeyDown, this);\n    },\n\n    start() {\n        this._setupGrid();\n    },\n\n    update(dt) { },\n});\n"]}